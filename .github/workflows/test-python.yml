name: "test / python"

on:
  pull_request:
  push:
    branches:
      - main
      - 5.0-dev

concurrency:
  group: "${{ github.event.pull_request.number }}-${{ github.ref_name }}-${{ github.workflow }}"
  cancel-in-progress: true

env:
  NODE_OPTIONS: "--max-old-space-size=4096"
  # this is a non-secret secret and provides read access to a set of spaces for testing purposes
  # this secret has minimal permissions and only has access to things that can be made public
  HF_TOKEN: ${{ secrets.HF_TOKEN }}

jobs:
  changes:
    name: "changes"
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      should_run: ${{ steps.changes.outputs.should_run }}
      sha: ${{ steps.changes.outputs.sha }}
      pr_number: ${{ steps.changes.outputs.pr_number }}
      source_branch: ${{ steps.changes.outputs.source_branch }}
      source_repo: ${{ steps.changes.outputs.source_repo }}
      merge_sha: ${{ steps.changes.outputs.merge_sha }}
      labels: ${{ steps.changes.outputs.labels }}
      mergeable: ${{ steps.changes.outputs.mergeable }}
    steps:
      - uses: actions/checkout@v4
      - uses: "gradio-app/gradio/.github/actions/changes@main"
        id: changes
        with:
          type: "gradio"
          name: "test / python / linux"
          token: ${{ secrets.GITHUB_TOKEN }}
  test-python:
    # permissions: statuses: write
    # user code : true
    # secrets: GITHUB_TOKEN
    needs: [changes]
    # if: needs.changes.outputs.should_run == 'true'
    name: "test-python-${{ matrix.os }}-${{ matrix.test-type == 'flaky' && 'flaky' || 'not-flaky'}}"
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        test-type: ["not flaky", "flaky"]
        exclude:
          - os: ${{ github.event_name == 'pull_request' && contains( needs.changes.outputs.labels, 'windows-tests') && 'dummy' || 'windows-latest' }}
          - test-type: ${{ github.event_name == 'pull_request' && contains( needs.changes.outputs.labels, 'flaky-tests') && 'dummy' || 'flaky' }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      id: install_deps
      uses: "gradio-app/gradio/.github/actions/install-all-deps@main"
      with:
        python_version: "3.8"
        os: ${{ matrix.os }}
        test: true
      # unsafe - arbitrary code execution
    - name: Lint
      if: runner.os == 'Linux'
      run: |
        . venv/bin/activate
        ./scripts/lint_backend.sh
      # unsafe - arbitrary code execution
    - name: Typecheck
      if: runner.os == 'Linux'
      run: |
        . venv/bin/activate
        ./scripts/type_check_backend.sh
      # unsafe - arbitrary code execution
    - name: Run tests
      run: |
        . ${{steps.install_deps.outputs.venv_activate}}
        python -m pytest -m "${{ matrix.test-type }}"